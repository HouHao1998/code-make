package ${package}.${topName};

import ${package}.${topName}.dto.${className}DTO;
import ${package}.${topName}.vo.${className}VO;
import ${packageDomain}.${topName}.Page${className};
import com.bwda.som.commons.framework.web.common.controller.AjaxResponse;
import com.bwda.som.commons.framework.web.common.controller.BaseController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import com.bwda.som.commons.utility.base.model.pagenation.PageResult;

import javax.servlet.http.HttpServletRequest;
import java.util.List;


/**
 * <b>${docModule}</b>
 * <pre>
 * 描述<br/>
 * 作用：；<br/>
 * 限制：；<br/>
 * </pre>
 *
 * @author 侯浩(1272)
 * @date ${datetime}
 */
@RestController
@RequestMapping("/api/v1/")
public class ${className}Controller extends BaseController {
    @Autowired
    ${className}App ${classname}App;

    /**
     * 分页查询${docModule}
     *
     * @return ${docModule}
     */
    @GetMapping("/${classname}")
    public AjaxResponse get${className}Page(Page${className} page${className}) {
        return ajax(response -> {
            PageResult<${className}VO> groupList = ${classname}App.page${className}(page${className});
            response.addData("metas", groupList.getResults());
            response.addData("page", groupList.getPage());
        }, throwable -> AjaxResponse.failure("500", "分页查询${docModule}").addData(ERROR_DETAIL, throwable.getLocalizedMessage()));
    }

    /**
     * 查询${docModule}
     *
     * @return ${docModule}列表
     */
    @GetMapping("/${classname}")
    public AjaxResponse getAllList(Page${className} page${className}) {
        return ajax(response -> {
            List<${className}VO> groupList = ${classname}App.${className}List(page${className});
            response.addData("result", groupList);
        }, throwable -> AjaxResponse.failure("500", "查询${docModule}失败").addData(ERROR_DETAIL, throwable.getLocalizedMessage()));
    }


    /**
     * 新增${docModule}
     *
     * @return ${docModule}
     */
    @PostMapping("/${classname}")
    public AjaxResponse add${className}(@Validated @RequestBody final ${className}DTO ${classname}DTO) {
        return ajax(response -> {
            ${classname}App.add${className}(${classname}DTO);
        }, throwable -> AjaxResponse.failure("500", "新增${docModule}失败").addData(ERROR_DETAIL, throwable.getLocalizedMessage()));
    }

    /**
     * 修改${docModule}
     */
    @PutMapping(value = "/${classname}/{sn}")
    public AjaxResponse update${className}(@PathVariable Long sn, @RequestBody final ${className}DTO ${classname}DTO) {
        return ajax(response -> {
            ${classname}DTO.setSn(sn);
            ${classname}App.update${className}(${classname}DTO);
        }, throwable -> AjaxResponse.failure("500", "修改${docModule}失败").addData(ERROR_DETAIL, throwable.getLocalizedMessage()));
    }

    /**
     * 删除${docModule}
     *
     * @param sn 编码
     * @return
     */
    @DeleteMapping(value = "/${classname}/{sn}")
    public AjaxResponse delete${className}(@PathVariable(value = "sn") Long sn) {
        return ajax(response -> ${classname}App.delete${className}(sn ),
                throwable -> AjaxResponse.failure("500", "删除${docModule}失败")
                        .addData(ERROR_DETAIL, throwable.getLocalizedMessage()));
    }
    /**
     * 获取单一${docModule}
     *
     * @param sn 编码
     * @return
     */
    @GetMapping(value = "/${classname}/{sn}")
    public AjaxResponse get${className}(@PathVariable(value = "sn") Long sn) {
        return ajax(response -> {
            ${className}VO ${classname} = ${classname}App.get${className}(sn);
            response.addData("result", ${classname});
        }, throwable -> AjaxResponse.failure("500", "删除${docModule}失败")
                .addData(ERROR_DETAIL, throwable.getLocalizedMessage()));
    }
    /**
     * 启动${docModule}
     *
     * @param sn 编码
     * @return
     */
    @GetMapping(value = "/${classname}/enable/{sn}")
    public AjaxResponse enable${className}(@PathVariable(value = "sn") Long sn) {
        return ajax(response -> ${classname}App.enable${className}(sn),
                throwable -> AjaxResponse.failure("500", "启动${docModule}失败")
                        .addData(ERROR_DETAIL, throwable.getLocalizedMessage()));
    }
    /**
     * 禁用${docModule}
     *
     * @param sn 编码
     * @return
     */
    @GetMapping(value = "/${classname}/disable/{sn}")
    public AjaxResponse disable${className}(@PathVariable(value = "sn") Long sn) {
        return ajax(response -> ${classname}App.disable${className}(sn),
                throwable -> AjaxResponse.failure("500", "关闭${docModule}失败")
                        .addData(ERROR_DETAIL, throwable.getLocalizedMessage()));
    }

}
