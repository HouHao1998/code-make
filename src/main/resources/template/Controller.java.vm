package ${package}.${moduleName}.controller;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package}.${moduleName}.entity.Result;
import ${package}.${moduleName}.service.I${className}Service;
import ${package}.${moduleName}.bo.${className}QueryBo;
import ${package}.${moduleName}.bo.${className}SaveBo;
import ${package}.${moduleName}.vo.${className}DetailVo;
import ${package}.${moduleName}.vo.${className}ListVo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.core.toolkit.CollectionUtils;

import javax.annotation.Resource;
import java.util.List;

/**
 * ${docModule}Controller
 *
 * @author ${author}
 * @version 1.0
 * @date ${datetime}
 */
@Api(tags = "${docModule}管理")
@RestController
@RequestMapping("/api/v1/${classname}")
public class ${className}Controller {

    @Resource
    private I${className}Service ${classname}Service;

    @ApiOperation(value = "${docModule}分页查询", notes = "${docModule}分页查询")
    @PostMapping("/page")
    public Result<Page<${className}ListVo>> page(@RequestBody ${className}QueryBo queryBo) throws Exception {
        return ${classname}Service.page(queryBo);
    }

    @ApiOperation(value = "${docModule}列表查询", notes = "${docModule}列表查询")
    @PostMapping("/list")
    public Result<List<${className}ListVo>> list(@RequestBody ${className}QueryBo queryBo) throws Exception {
        return ${classname}Service.list(queryBo);
    }

    @ApiOperation(value = "${docModule}查询", notes = "${docModule}查询")
    @GetMapping("/info/{id}")
    public Result<${className}DetailVo> get(@PathVariable("id") long id) throws Exception {
        return ${classname}Service.get(id);
    }

    @ApiOperation(value = "${docModule}新增", notes = "${docModule}新增")
    @PostMapping("/save")
    public Result<${className}DetailVo> insert(@RequestBody  ${className}SaveBo saveBo) throws Exception {
        return ${classname}Service.insert(saveBo);
    }

    @ApiOperation(value = "${docModule}修改", notes = "${docModule}修改")
    @PostMapping("/update")
    public Result<${className}DetailVo> update(@RequestBody  ${className}SaveBo saveBo) throws Exception {
        return ${classname}Service.update(saveBo);
    }

    @ApiOperation(value = "${docModule}批量删除", notes = "${docModule}批量删除")
    @ApiImplicitParam(name = "ids", value = "主键ID集合，多个以英文逗号拼接", dataType = "String")
    @GetMapping("/delete")
    public Result<String> remove(@RequestParam List<Long> ids) throws Exception {
        return ${classname}Service.remove(ids);
    }
    @ApiOperation(value = "${docModule}批量查询", notes = "${docModule}批量查询")
    @PostMapping("/selectIdsList")
    public  Result<List<${className}ListVo>> selectIdsList(@RequestBody ${className}QueryBo queryBo) throws Exception {
        if(CollectionUtils.isEmpty(queryBo.getIds())){
            return Result.fail("ids不能为空");
        }
        return ${classname}Service.selectIdsList(queryBo.getIds());
    }
}
